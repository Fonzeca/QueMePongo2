package main.java.quemepongo2.model;
// Generated 05-dic-2019 11:36:49 by Hibernate Tools 4.3.5.Final

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Generated;
import org.hibernate.annotations.GenerationTime;

/**
 * CiudadUsuario generated by hbm2java
 */
@Entity
@Table(name = "CiudadUsuario", schema = "dbo", catalog = "QueMePongo2")
public class CiudadUsuario implements java.io.Serializable {

	private CiudadUsuarioId id;
	private Ciudad ciudad;
	private Usuario usuario;
	private int indiceOrdenado;
	private boolean predeterminado;

	public CiudadUsuario() {
	}

	public CiudadUsuario(CiudadUsuarioId id, Ciudad ciudad, Usuario usuario, int indiceOrdenado,
			boolean predeterminado) {
		this.id = id;
		this.ciudad = ciudad;
		this.usuario = usuario;
		this.indiceOrdenado = indiceOrdenado;
		this.predeterminado = predeterminado;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "ciudadId", column = @Column(name = "CiudadId", nullable = false)),
			@AttributeOverride(name = "usuarioId", column = @Column(name = "UsuarioId", nullable = false)) })
	public CiudadUsuarioId getId() {
		return this.id;
	}

	public void setId(CiudadUsuarioId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CiudadId", nullable = false, insertable = false, updatable = false)
	public Ciudad getCiudad() {
		return this.ciudad;
	}

	public void setCiudad(Ciudad ciudad) {
		this.ciudad = ciudad;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UsuarioId", nullable = false, insertable = false, updatable = false)
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}
	
	@Generated(value = GenerationTime.ALWAYS)
	@Column(name = "IndiceOrdenado", nullable = false)
	public int getIndiceOrdenado() {
		return this.indiceOrdenado;
	}

	public void setIndiceOrdenado(int indiceOrdenado) {
		this.indiceOrdenado = indiceOrdenado;
	}

	@Column(name = "Predeterminado", nullable = false)
	public boolean isPredeterminado() {
		return this.predeterminado;
	}

	public void setPredeterminado(boolean predeterminado) {
		this.predeterminado = predeterminado;
	}

}
